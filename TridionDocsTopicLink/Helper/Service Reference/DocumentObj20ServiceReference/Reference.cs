//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SDLKC2016WSSample.DocumentObj20ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API20/")]
    [System.SerializableAttribute()]
    public partial class InfoShareFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long InfoShareErrorNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XMLDetailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InfoShareErrorNumber {
            get {
                return this.InfoShareErrorNumberField;
            }
            set {
                if ((this.InfoShareErrorNumberField.Equals(value) != true)) {
                    this.InfoShareErrorNumberField = value;
                    this.RaisePropertyChanged("InfoShareErrorNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Origin {
            get {
                return this.OriginField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginField, value) != true)) {
                    this.OriginField = value;
                    this.RaisePropertyChanged("Origin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XMLDetail {
            get {
                return this.XMLDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.XMLDetailField, value) != true)) {
                    this.XMLDetailField = value;
                    this.RaisePropertyChanged("XMLDetail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ISHType", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Enumerations/API20/")]
    public enum ISHType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHNone = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHMasterDoc = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHModule = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHIllustration = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHReusedObj = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHTemplate = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHLibrary = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHBaseline = 256,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHPublication = 512,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ISHStatusgroup", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Enumerations/API20/")]
    public enum ISHStatusgroup : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHReleasedStates = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHReleasedOrDraftStates = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHOutOfDateOrReleasedStates = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHNoStatusFilter = 8,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/", ConfigurationName="DocumentObj20ServiceReference.DocumentObj")]
    public interface DocumentObj {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/Delete", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/DeleteRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.DocumentObj20ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/DeleteInfoS" +
            "hareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API20/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string Delete(string logicalId, string version, string language, string resolution);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/Update", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/UpdateRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.DocumentObj20ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/UpdateInfoS" +
            "hareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API20/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string Update(string logicalId, ref string version, string language, string resolution, string xmlMetadata, string xmlRequiredCurrentState, string edt, byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/AddShortCut" +
            "", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/AddShortCut" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.DocumentObj20ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/AddShortCut" +
            "InfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API20/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string AddShortCut(string logicalId, string toFolderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/RemoveShort" +
            "Cut", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/RemoveShort" +
            "CutResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.DocumentObj20ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/RemoveShort" +
            "CutInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API20/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string RemoveShortCut(string logicalId, string fromFolderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/CheckOut", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/CheckOutRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.DocumentObj20ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/CheckOutInf" +
            "oShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API20/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string CheckOut(string logicalId, ref string version, string language, string resolution, string xmlRequestedMetadata, ref string xmlObjectList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/CheckIn", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/CheckInResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.DocumentObj20ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/CheckInInfo" +
            "ShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API20/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string CheckIn(string logicalId, string version, string language, string resolution, string xmlMetadata, string edt, byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/UndoCheckOu" +
            "t", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/UndoCheckOu" +
            "tResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.DocumentObj20ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/UndoCheckOu" +
            "tInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API20/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string UndoCheckOut(string logicalId, string version, string language, string resolution);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/SetMetaData" +
            "", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/SetMetaData" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.DocumentObj20ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/SetMetaData" +
            "InfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API20/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string SetMetaData(string logicalId, ref string version, string language, string resolution, string xmlMetadata, string xmlRequiredCurrentState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/Move", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/MoveRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.DocumentObj20ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/MoveInfoSha" +
            "reFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API20/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string Move(string logicalId, string fromFolderId, string toFolderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/StartTransl" +
            "ationMgmt", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/StartTransl" +
            "ationMgmtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.DocumentObj20ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/StartTransl" +
            "ationMgmtInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API20/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string StartTranslationMgmt(string logicalId, ref string version, ref string eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/GetDocObj", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/GetDocObjRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.DocumentObj20ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/GetDocObjIn" +
            "foShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API20/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string GetDocObj(string logicalId, ref string version, string language, string resolution, string xmlMetadataFilter, string xmlProductDefinition, string xmlRequestedMetadata, ref string xmlObjectList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/GetPossible" +
            "TransitionStates", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/GetPossible" +
            "TransitionStatesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.DocumentObj20ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/GetPossible" +
            "TransitionStatesInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API20/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string GetPossibleTransitionStates(string logicalId, ref string version, string language, string resolution, ref string[] statusList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/GetMetaData" +
            "", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/GetMetaData" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.DocumentObj20ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/GetMetaData" +
            "InfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API20/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string GetMetaData(string logicalId, ref string version, string language, string resolution, string xmlRequestedMetadata, ref string xmlObjectList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/RetrievebyI" +
            "shLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/RetrievebyI" +
            "shLngRefResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.DocumentObj20ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/RetrievebyI" +
            "shLngRefInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API20/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string RetrievebyIshLngRef(string lngRefs, string xmlProductDefinition, string xmlRequestedMetadata, bool includeData, ref string xmlObjectList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/EvaluateDoc" +
            "ument", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/EvaluateDoc" +
            "umentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.DocumentObj20ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/EvaluateDoc" +
            "umentInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API20/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        int EvaluateDocument(string xmlInDocument, string xmlProductDefinition, bool validateConditions, ref string outDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/Create", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/CreateRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.DocumentObj20ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/CreateInfoS" +
            "hareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API20/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string Create(string folderId, SDLKC2016WSSample.DocumentObj20ServiceReference.ISHType ishType, ref string logicalId, ref string version, string language, string resolution, string xmlMetadata, string edt, byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/CreateOrUpd" +
            "ate", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/CreateOrUpd" +
            "ateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.DocumentObj20ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/CreateOrUpd" +
            "ateInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API20/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string CreateOrUpdate(string folderId, SDLKC2016WSSample.DocumentObj20ServiceReference.ISHType ishType, ref string logicalId, ref string version, string language, string resolution, string initialStatus, string xmlMetadata, string xmlRequiredCurrentState, string edt, byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/GetInitialS" +
            "tates", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/GetInitialS" +
            "tatesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.DocumentObj20ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/GetInitialS" +
            "tatesInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API20/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string GetInitialStates(SDLKC2016WSSample.DocumentObj20ServiceReference.ISHType ishType, ref string[] statusList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/Find", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/FindRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.DocumentObj20ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/FindInfoSha" +
            "reFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API20/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string Find(string ishTypeFilter, SDLKC2016WSSample.DocumentObj20ServiceReference.ISHStatusgroup statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata, ref string xmlObjectList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/RetrieveObj" +
            "ects", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/RetrieveObj" +
            "ectsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.DocumentObj20ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/RetrieveObj" +
            "ectsInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API20/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string RetrieveObjects(string logicalId, SDLKC2016WSSample.DocumentObj20ServiceReference.ISHStatusgroup statusFilter, string xmlMetadataFilter, string xmlProductDefinition, string xmlRequestedMetadata, ref string xmlObjectList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/RetrieveMet" +
            "aData", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/RetrieveMet" +
            "aDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.DocumentObj20ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/RetrieveMet" +
            "aDataInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API20/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string RetrieveMetaData(string logicalId, SDLKC2016WSSample.DocumentObj20ServiceReference.ISHStatusgroup statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata, ref string xmlObjectList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/RetrieveLat" +
            "estVersionsInfo", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/RetrieveLat" +
            "estVersionsInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.DocumentObj20ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/DocumentObj/RetrieveLat" +
            "estVersionsInfoInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API20/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string RetrieveLatestVersionsInfo(string logicalId, string language, string resolution, SDLKC2016WSSample.DocumentObj20ServiceReference.ISHStatusgroup statusFilter, ref string xmlObjectList);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DocumentObjChannel : SDLKC2016WSSample.DocumentObj20ServiceReference.DocumentObj, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DocumentObjClient : System.ServiceModel.ClientBase<SDLKC2016WSSample.DocumentObj20ServiceReference.DocumentObj>, SDLKC2016WSSample.DocumentObj20ServiceReference.DocumentObj {
        
        public DocumentObjClient() {
        }
        
        public DocumentObjClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DocumentObjClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocumentObjClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocumentObjClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Delete(string logicalId, string version, string language, string resolution) {
            return base.Channel.Delete(logicalId, version, language, resolution);
        }
        
        public string Update(string logicalId, ref string version, string language, string resolution, string xmlMetadata, string xmlRequiredCurrentState, string edt, byte[] data) {
            return base.Channel.Update(logicalId, ref version, language, resolution, xmlMetadata, xmlRequiredCurrentState, edt, data);
        }
        
        public string AddShortCut(string logicalId, string toFolderId) {
            return base.Channel.AddShortCut(logicalId, toFolderId);
        }
        
        public string RemoveShortCut(string logicalId, string fromFolderId) {
            return base.Channel.RemoveShortCut(logicalId, fromFolderId);
        }
        
        public string CheckOut(string logicalId, ref string version, string language, string resolution, string xmlRequestedMetadata, ref string xmlObjectList) {
            return base.Channel.CheckOut(logicalId, ref version, language, resolution, xmlRequestedMetadata, ref xmlObjectList);
        }
        
        public string CheckIn(string logicalId, string version, string language, string resolution, string xmlMetadata, string edt, byte[] data) {
            return base.Channel.CheckIn(logicalId, version, language, resolution, xmlMetadata, edt, data);
        }
        
        public string UndoCheckOut(string logicalId, string version, string language, string resolution) {
            return base.Channel.UndoCheckOut(logicalId, version, language, resolution);
        }
        
        public string SetMetaData(string logicalId, ref string version, string language, string resolution, string xmlMetadata, string xmlRequiredCurrentState) {
            return base.Channel.SetMetaData(logicalId, ref version, language, resolution, xmlMetadata, xmlRequiredCurrentState);
        }
        
        public string Move(string logicalId, string fromFolderId, string toFolderId) {
            return base.Channel.Move(logicalId, fromFolderId, toFolderId);
        }
        
        public string StartTranslationMgmt(string logicalId, ref string version, ref string eventId) {
            return base.Channel.StartTranslationMgmt(logicalId, ref version, ref eventId);
        }
        
        public string GetDocObj(string logicalId, ref string version, string language, string resolution, string xmlMetadataFilter, string xmlProductDefinition, string xmlRequestedMetadata, ref string xmlObjectList) {
            return base.Channel.GetDocObj(logicalId, ref version, language, resolution, xmlMetadataFilter, xmlProductDefinition, xmlRequestedMetadata, ref xmlObjectList);
        }
        
        public string GetPossibleTransitionStates(string logicalId, ref string version, string language, string resolution, ref string[] statusList) {
            return base.Channel.GetPossibleTransitionStates(logicalId, ref version, language, resolution, ref statusList);
        }
        
        public string GetMetaData(string logicalId, ref string version, string language, string resolution, string xmlRequestedMetadata, ref string xmlObjectList) {
            return base.Channel.GetMetaData(logicalId, ref version, language, resolution, xmlRequestedMetadata, ref xmlObjectList);
        }
        
        public string RetrievebyIshLngRef(string lngRefs, string xmlProductDefinition, string xmlRequestedMetadata, bool includeData, ref string xmlObjectList) {
            return base.Channel.RetrievebyIshLngRef(lngRefs, xmlProductDefinition, xmlRequestedMetadata, includeData, ref xmlObjectList);
        }
        
        public int EvaluateDocument(string xmlInDocument, string xmlProductDefinition, bool validateConditions, ref string outDocument) {
            return base.Channel.EvaluateDocument(xmlInDocument, xmlProductDefinition, validateConditions, ref outDocument);
        }
        
        public string Create(string folderId, SDLKC2016WSSample.DocumentObj20ServiceReference.ISHType ishType, ref string logicalId, ref string version, string language, string resolution, string xmlMetadata, string edt, byte[] data) {
            return base.Channel.Create(folderId, ishType, ref logicalId, ref version, language, resolution, xmlMetadata, edt, data);
        }
        
        public string CreateOrUpdate(string folderId, SDLKC2016WSSample.DocumentObj20ServiceReference.ISHType ishType, ref string logicalId, ref string version, string language, string resolution, string initialStatus, string xmlMetadata, string xmlRequiredCurrentState, string edt, byte[] data) {
            return base.Channel.CreateOrUpdate(folderId, ishType, ref logicalId, ref version, language, resolution, initialStatus, xmlMetadata, xmlRequiredCurrentState, edt, data);
        }
        
        public string GetInitialStates(SDLKC2016WSSample.DocumentObj20ServiceReference.ISHType ishType, ref string[] statusList) {
            return base.Channel.GetInitialStates(ishType, ref statusList);
        }
        
        public string Find(string ishTypeFilter, SDLKC2016WSSample.DocumentObj20ServiceReference.ISHStatusgroup statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata, ref string xmlObjectList) {
            return base.Channel.Find(ishTypeFilter, statusFilter, xmlMetadataFilter, xmlRequestedMetadata, ref xmlObjectList);
        }
        
        public string RetrieveObjects(string logicalId, SDLKC2016WSSample.DocumentObj20ServiceReference.ISHStatusgroup statusFilter, string xmlMetadataFilter, string xmlProductDefinition, string xmlRequestedMetadata, ref string xmlObjectList) {
            return base.Channel.RetrieveObjects(logicalId, statusFilter, xmlMetadataFilter, xmlProductDefinition, xmlRequestedMetadata, ref xmlObjectList);
        }
        
        public string RetrieveMetaData(string logicalId, SDLKC2016WSSample.DocumentObj20ServiceReference.ISHStatusgroup statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata, ref string xmlObjectList) {
            return base.Channel.RetrieveMetaData(logicalId, statusFilter, xmlMetadataFilter, xmlRequestedMetadata, ref xmlObjectList);
        }
        
        public string RetrieveLatestVersionsInfo(string logicalId, string language, string resolution, SDLKC2016WSSample.DocumentObj20ServiceReference.ISHStatusgroup statusFilter, ref string xmlObjectList) {
            return base.Channel.RetrieveLatestVersionsInfo(logicalId, language, resolution, statusFilter, ref xmlObjectList);
        }
    }
}
