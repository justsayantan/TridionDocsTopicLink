//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SDLKC2016WSSample.Folder25ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
    [System.SerializableAttribute()]
    public partial class InfoShareFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long InfoShareErrorNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XMLDetailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InfoShareErrorNumber {
            get {
                return this.InfoShareErrorNumberField;
            }
            set {
                if ((this.InfoShareErrorNumberField.Equals(value) != true)) {
                    this.InfoShareErrorNumberField = value;
                    this.RaisePropertyChanged("InfoShareErrorNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Origin {
            get {
                return this.OriginField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginField, value) != true)) {
                    this.OriginField = value;
                    this.RaisePropertyChanged("Origin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XMLDetail {
            get {
                return this.XMLDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.XMLDetailField, value) != true)) {
                    this.XMLDetailField = value;
                    this.RaisePropertyChanged("XMLDetail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseFolder", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Enumerations/API25/")]
    public enum BaseFolder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Data = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        System = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Favorites = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EditorTemplate = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IshFolderType", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Enumerations/API25/")]
    public enum IshFolderType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHNone = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHModule = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHMasterDoc = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHLibrary = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHTemplate = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHIllustration = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHPublication = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHReference = 7,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", ConfigurationName="Folder25ServiceReference.Folder")]
    public interface Folder {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/GetMetadataByIsh" +
            "FolderRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/GetMetadataByIsh" +
            "FolderRefResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.Folder25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/GetMetadataByIsh" +
            "FolderRefInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlFolderList")]
        string GetMetadataByIshFolderRef(long folderRef, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/GetSubFoldersByI" +
            "shFolderRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/GetSubFoldersByI" +
            "shFolderRefResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.Folder25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/GetSubFoldersByI" +
            "shFolderRefInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlFolderList")]
        string GetSubFoldersByIshFolderRef(long folderRef);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/GetContents", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/GetContentsRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.Folder25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/GetContentsInfoS" +
            "hareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string GetContents(long folderRef);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/GetMetadata", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/GetMetadataRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.Folder25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/GetMetadataInfoS" +
            "hareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlFolderList")]
        string GetMetadata(SDLKC2016WSSample.Folder25ServiceReference.BaseFolder baseFolder, string[] folderPath, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/GetSubFolders", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/GetSubFoldersRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.Folder25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/GetSubFoldersInf" +
            "oShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlFolderList")]
        string GetSubFolders(SDLKC2016WSSample.Folder25ServiceReference.BaseFolder baseFolder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/RetrieveMetadata" +
            "ByIshFolderRefs", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/RetrieveMetadata" +
            "ByIshFolderRefsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.Folder25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/RetrieveMetadata" +
            "ByIshFolderRefsInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlFolderList")]
        string RetrieveMetadataByIshFolderRefs(long[] folderRefs, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/FolderLocation", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/FolderLocationRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.Folder25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/FolderLocationIn" +
            "foShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="baseFolder")]
        SDLKC2016WSSample.Folder25ServiceReference.BaseFolder FolderLocation(out string[] folderPath, out long[] folderRefs, long folderRef);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/Create", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/CreateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.Folder25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/CreateInfoShareF" +
            "ault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        long Create(long parentFolderRef, string folderName, string ownedBy, string[] readAccess, SDLKC2016WSSample.Folder25ServiceReference.IshFolderType ishFolderType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/CreateQueryFolde" +
            "r", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/CreateQueryFolde" +
            "rResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.Folder25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/CreateQueryFolde" +
            "rInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        long CreateQueryFolder(long parentFolderRef, string folderName, string ownedBy, string[] readAccess, string xmlQuery);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/CreateReferenceF" +
            "older", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/CreateReferenceF" +
            "olderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.Folder25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/CreateReferenceF" +
            "olderInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        long CreateReferenceFolder(long parentFolderRef, string folderName, string ownedBy, string[] readAccess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/Update", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/UpdateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.Folder25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/UpdateInfoShareF" +
            "ault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void Update(long folderRef, string newFolderName, string[] readAccess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/UpdateQueryFolde" +
            "r", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/UpdateQueryFolde" +
            "rResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.Folder25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/UpdateQueryFolde" +
            "rInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void UpdateQueryFolder(long folderRef, string newFolderName, string[] readAccess, string xmlQuery);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/UpdateReferenceF" +
            "older", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/UpdateReferenceF" +
            "olderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.Folder25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/UpdateReferenceF" +
            "olderInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void UpdateReferenceFolder(long folderRef, string newFolderName, string[] readAccess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/Rename", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/RenameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.Folder25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/RenameInfoShareF" +
            "ault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void Rename(long folderRef, string newFolderName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/Move", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/MoveResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.Folder25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/MoveInfoShareFau" +
            "lt", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void Move(long folderRef, long toFolderRef);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/Delete", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/DeleteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.Folder25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/DeleteInfoShareF" +
            "ault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void Delete(long folderRef);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/AddShortCuts", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/AddShortCutsResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.Folder25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/AddShortCutsInfo" +
            "ShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlErrorReport")]
        string AddShortCuts(long folderRef, string[] logicalIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/RemoveShortCuts", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/RemoveShortCutsR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.Folder25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/RemoveShortCutsI" +
            "nfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlErrorReport")]
        string RemoveShortCuts(long folderRef, string[] logicalIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/MoveObjects", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/MoveObjectsRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.Folder25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Folder/MoveObjectsInfoS" +
            "hareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlErrorReport")]
        string MoveObjects(long toFolderRef, string[] logicalIds, long fromFolderRef);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface FolderChannel : SDLKC2016WSSample.Folder25ServiceReference.Folder, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FolderClient : System.ServiceModel.ClientBase<SDLKC2016WSSample.Folder25ServiceReference.Folder>, SDLKC2016WSSample.Folder25ServiceReference.Folder {
        
        public FolderClient() {
        }
        
        public FolderClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FolderClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FolderClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FolderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetMetadataByIshFolderRef(long folderRef, string xmlRequestedMetadata) {
            return base.Channel.GetMetadataByIshFolderRef(folderRef, xmlRequestedMetadata);
        }
        
        public string GetSubFoldersByIshFolderRef(long folderRef) {
            return base.Channel.GetSubFoldersByIshFolderRef(folderRef);
        }
        
        public string GetContents(long folderRef) {
            return base.Channel.GetContents(folderRef);
        }
        
        public string GetMetadata(SDLKC2016WSSample.Folder25ServiceReference.BaseFolder baseFolder, string[] folderPath, string xmlRequestedMetadata) {
            return base.Channel.GetMetadata(baseFolder, folderPath, xmlRequestedMetadata);
        }
        
        public string GetSubFolders(SDLKC2016WSSample.Folder25ServiceReference.BaseFolder baseFolder) {
            return base.Channel.GetSubFolders(baseFolder);
        }
        
        public string RetrieveMetadataByIshFolderRefs(long[] folderRefs, string xmlRequestedMetadata) {
            return base.Channel.RetrieveMetadataByIshFolderRefs(folderRefs, xmlRequestedMetadata);
        }
        
        public SDLKC2016WSSample.Folder25ServiceReference.BaseFolder FolderLocation(out string[] folderPath, out long[] folderRefs, long folderRef) {
            return base.Channel.FolderLocation(out folderPath, out folderRefs, folderRef);
        }
        
        public long Create(long parentFolderRef, string folderName, string ownedBy, string[] readAccess, SDLKC2016WSSample.Folder25ServiceReference.IshFolderType ishFolderType) {
            return base.Channel.Create(parentFolderRef, folderName, ownedBy, readAccess, ishFolderType);
        }
        
        public long CreateQueryFolder(long parentFolderRef, string folderName, string ownedBy, string[] readAccess, string xmlQuery) {
            return base.Channel.CreateQueryFolder(parentFolderRef, folderName, ownedBy, readAccess, xmlQuery);
        }
        
        public long CreateReferenceFolder(long parentFolderRef, string folderName, string ownedBy, string[] readAccess) {
            return base.Channel.CreateReferenceFolder(parentFolderRef, folderName, ownedBy, readAccess);
        }
        
        public void Update(long folderRef, string newFolderName, string[] readAccess) {
            base.Channel.Update(folderRef, newFolderName, readAccess);
        }
        
        public void UpdateQueryFolder(long folderRef, string newFolderName, string[] readAccess, string xmlQuery) {
            base.Channel.UpdateQueryFolder(folderRef, newFolderName, readAccess, xmlQuery);
        }
        
        public void UpdateReferenceFolder(long folderRef, string newFolderName, string[] readAccess) {
            base.Channel.UpdateReferenceFolder(folderRef, newFolderName, readAccess);
        }
        
        public void Rename(long folderRef, string newFolderName) {
            base.Channel.Rename(folderRef, newFolderName);
        }
        
        public void Move(long folderRef, long toFolderRef) {
            base.Channel.Move(folderRef, toFolderRef);
        }
        
        public void Delete(long folderRef) {
            base.Channel.Delete(folderRef);
        }
        
        public string AddShortCuts(long folderRef, string[] logicalIds) {
            return base.Channel.AddShortCuts(folderRef, logicalIds);
        }
        
        public string RemoveShortCuts(long folderRef, string[] logicalIds) {
            return base.Channel.RemoveShortCuts(folderRef, logicalIds);
        }
        
        public string MoveObjects(long toFolderRef, string[] logicalIds, long fromFolderRef) {
            return base.Channel.MoveObjects(toFolderRef, logicalIds, fromFolderRef);
        }
    }
}
