//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SDLKC2016WSSample.Publication20ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API20/")]
    [System.SerializableAttribute()]
    public partial class InfoShareFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long InfoShareErrorNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XMLDetailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InfoShareErrorNumber {
            get {
                return this.InfoShareErrorNumberField;
            }
            set {
                if ((this.InfoShareErrorNumberField.Equals(value) != true)) {
                    this.InfoShareErrorNumberField = value;
                    this.RaisePropertyChanged("InfoShareErrorNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Origin {
            get {
                return this.OriginField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginField, value) != true)) {
                    this.OriginField = value;
                    this.RaisePropertyChanged("Origin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XMLDetail {
            get {
                return this.XMLDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.XMLDetailField, value) != true)) {
                    this.XMLDetailField = value;
                    this.RaisePropertyChanged("XMLDetail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ISHStatusgroup", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Enumerations/API20/")]
    public enum ISHStatusgroup : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHReleasedStates = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHReleasedOrDraftStates = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHOutOfDateOrReleasedStates = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHNoStatusFilter = 8,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/", ConfigurationName="Publication20ServiceReference.Publication")]
    public interface Publication {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/Publication/Create", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/Publication/CreateRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.Publication20ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/Publication/CreateInfoS" +
            "hareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API20/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string Create(string folderId, ref string logicalId, ref string version, string xmlMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/Publication/Copy", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/Publication/CopyRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.Publication20ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/Publication/CopyInfoSha" +
            "reFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API20/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string Copy(string sourceBaseline, string folderId, ref string logicalId, ref string version, string xmlMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/Publication/Delete", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/Publication/DeleteRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.Publication20ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/Publication/DeleteInfoS" +
            "hareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API20/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string Delete(string logicalId, string sourceBaseline);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/Publication/SetMetaData" +
            "", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/Publication/SetMetaData" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.Publication20ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/Publication/SetMetaData" +
            "InfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API20/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string SetMetaData(string logicalId, ref string version, string xmlMetadata, string xmlRequiredCurrentState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/Publication/GetMetaData" +
            "", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/Publication/GetMetaData" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.Publication20ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/Publication/GetMetaData" +
            "InfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API20/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string GetMetaData(string logicalId, ref string version, string xmlRequestedMetadata, ref string xmlObjectList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/Publication/Find", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/Publication/FindRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.Publication20ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/Publication/FindInfoSha" +
            "reFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API20/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string Find(SDLKC2016WSSample.Publication20ServiceReference.ISHStatusgroup statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata, ref string xmlObjectList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/Publication/RetrieveMet" +
            "aData", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/Publication/RetrieveMet" +
            "aDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SDLKC2016WSSample.Publication20ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API20/Publication/RetrieveMet" +
            "aDataInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API20/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string RetrieveMetaData(string logicalId, string xmlMetadataFilter, string xmlRequestedMetadata, ref string xmlObjectList);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface PublicationChannel : SDLKC2016WSSample.Publication20ServiceReference.Publication, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PublicationClient : System.ServiceModel.ClientBase<SDLKC2016WSSample.Publication20ServiceReference.Publication>, SDLKC2016WSSample.Publication20ServiceReference.Publication {
        
        public PublicationClient() {
        }
        
        public PublicationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PublicationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PublicationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PublicationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Create(string folderId, ref string logicalId, ref string version, string xmlMetadata) {
            return base.Channel.Create(folderId, ref logicalId, ref version, xmlMetadata);
        }
        
        public string Copy(string sourceBaseline, string folderId, ref string logicalId, ref string version, string xmlMetadata) {
            return base.Channel.Copy(sourceBaseline, folderId, ref logicalId, ref version, xmlMetadata);
        }
        
        public string Delete(string logicalId, string sourceBaseline) {
            return base.Channel.Delete(logicalId, sourceBaseline);
        }
        
        public string SetMetaData(string logicalId, ref string version, string xmlMetadata, string xmlRequiredCurrentState) {
            return base.Channel.SetMetaData(logicalId, ref version, xmlMetadata, xmlRequiredCurrentState);
        }
        
        public string GetMetaData(string logicalId, ref string version, string xmlRequestedMetadata, ref string xmlObjectList) {
            return base.Channel.GetMetaData(logicalId, ref version, xmlRequestedMetadata, ref xmlObjectList);
        }
        
        public string Find(SDLKC2016WSSample.Publication20ServiceReference.ISHStatusgroup statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata, ref string xmlObjectList) {
            return base.Channel.Find(statusFilter, xmlMetadataFilter, xmlRequestedMetadata, ref xmlObjectList);
        }
        
        public string RetrieveMetaData(string logicalId, string xmlMetadataFilter, string xmlRequestedMetadata, ref string xmlObjectList) {
            return base.Channel.RetrieveMetaData(logicalId, xmlMetadataFilter, xmlRequestedMetadata, ref xmlObjectList);
        }
    }
}
